syntax = "proto2";
package gameinfo;

option go_package = "retromanager/gameinfo";

message GameExtInfo {
    repeated string genre = 1; //
    repeated string video = 2; //
    repeated string image = 3; //
    optional double rating = 4; //
    optional string developer = 5; //
    optional string publisher = 6; //
    optional string releasedate = 7; //
    optional uint32 players = 8; //
    optional string marquee = 9; //
    optional string lang = 10; //
    optional string region = 11; //
    optional string boxart = 12; //
    optional string screenshot = 13; //
    optional string screentitle = 14; //
}

message GameInfo {
    optional uint64 id = 1; //
    optional uint32 platform = 2; //
    optional string display_name = 3; //
    optional uint64 file_size = 4; //
    optional string desc = 5; //
    optional uint64 create_time = 6; //
    optional uint64 update_time = 7; //
    optional string hash = 8; //
    optional GameExtInfo extinfo = 9; //
    optional string down_key = 10; //
    optional string file_name = 11; //
}

message ListGameRequest {
    optional uint32 platform = 1; //
    optional uint32 offset = 2; //
    optional uint32 limit = 3; //
}

message ListGameResponse {
    repeated GameInfo list = 1; //
    optional uint32 total = 2; //
}

message FilterValue {
    optional string field = 1; //
    optional string value = 2; //
}

message RangeValue {
    optional string field = 1; //
    optional string left = 2; //
    optional string right = 3; //
}

message SortValue {
    optional string field = 1; //
    optional bool asc = 2; //
}

message SearchParam {
    repeated FilterValue filter_list = 1; //
    repeated RangeValue range_list = 2; //
    repeated SortValue sort_list = 3; //
    optional uint32 offset = 4; //
    optional uint32 limit = 5; //
}

message SearchGameRequest {
    optional SearchParam param = 1; //
}

message SearchGameResponse {
    repeated GameInfo list = 1; //
    optional uint32 total = 2; //
}

message CreateGameRequest {
    optional GameInfo item = 1; //
}

message CreateGameResponse {
    optional uint64 game_id = 1; //
    optional bool is_game_exist = 2; //
}

message ModifyItem {
    optional uint32 platform = 1; //
    optional string display_name = 2; //
    optional uint64 file_size = 3; //
    optional string desc = 4; //
    optional string hash = 5; //
    optional GameExtInfo extinfo = 6; //
    optional string down_key = 7;
    optional string file_name = 8; //
}

message ModifyGameRequest {
    optional uint64 game_id = 1; //
    optional ModifyItem item = 2; //
}

message DeleteGameRequest {
    optional uint64 game_id = 1; //
}

message DeleteGameResponse {

}
